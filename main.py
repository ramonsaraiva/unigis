from flask import Flask
from flask import send_from_directory

from flask.ext.restful import Api

from models import db
from models import Building

from resources import Points
from resources import Buildings

app = Flask(__name__)
app.config.from_object(__name__)

from tornado.wsgi import WSGIContainer
from tornado.httpserver import HTTPServer
from tornado.ioloop import IOLoop

import daemon

app.config.update({
	'SQLALCHEMY_DATABASE_URI': 'postgresql://db2postgis:db2postgis@localhost/db2postgis'
})

db.init_app(app)
api = Api(app)

api.add_resource(Points, '/points/')
api.add_resource(Buildings, '/buildings/')

@app.route('/')
def send_template():
	return send_from_directory('templates', 'base.html')

@app.route('/<path:path>')
def send_static(path):
	return send_from_directory('static', path)

@app.cli.command()
def drop():
	db.drop_all()

@app.cli.command()
def create():
	db.create_all()

@app.cli.command()
def generate():
	buildings = [
		{
			'name': 'Unisinos',
			'geom': 'POLYGON((-29.792974824703958 -51.158196330070496, -29.79401762517251 -51.15791738033295, -29.794669369947076 -51.1580353975296, -29.795432836998465 -51.1590975522995, -29.79611250398447 -51.15941941738129, -29.796624578801172 -51.1591511964798, -29.79744389305685 -51.157477498054504, -29.798402854629657 -51.156179308891296, -29.7985425084609 -51.15565359592438, -29.798346993042582 -51.15478456020355, -29.797350789502037 -51.153475642204285, -29.796959753625753 -51.152220368385315, -29.796820097585293 -51.15100800991058, -29.7963731969459 -51.15040719509125, -29.795814568339743 -51.150203347206116, -29.79454833195276 -51.15001022815704, -29.79401762517251 -51.15008533000946, -29.792686190511297 -51.1510294675827, -29.791550267216632 -51.15134060382843, -29.792974824703958 -51.158196330070496))',
			'stroke_color': '000000',
			'stroke_opacity': 0.8,
			'stroke_weight': 1,
			'fill_color': '000000',
			'fill_opacity': 0.4,
		},
		{
			'name': 'Centro A',
			'geom': 'POLYGON((-29.792974824703958 -51.158207058906555, -29.79248135283728 -51.15581452846527, -29.79398038248575 -51.155449748039246, -29.79402693584204 -51.154956221580505, -29.7943434980904 -51.15452706813812, -29.794883513732213 -51.154505610466, -29.795274557722546 -51.15480601787567, -29.795600426547136 -51.15540683269501, -29.795525942337928 -51.15628659725189, -29.795814568339743 -51.15741312503815, -29.796103193509005 -51.15764915943146, -29.797211134007373 -51.157456040382385, -29.797388030934346 -51.15757405757904, -29.796596647515113 -51.1591511964798, -29.796103193509005 -51.15940868854523, -29.79544214753631 -51.15910828113556, -29.794678680555958 -51.15802466869354, -29.79401762517251 -51.15790665149689, -29.792974824703958 -51.158207058906555))',
			'stroke_color': '50514F',
			'stroke_opacity': 0.8,
			'stroke_weight': 1,
			'fill_color': '50514F',
			'fill_opacity': 0.4,
		},
		{
			'name': 'Centro B',
			'geom': 'POLYGON((-29.792472042023952 -51.15577161312103, -29.792053054527678 -51.15361511707306, -29.795153520460268 -51.15261733531952, -29.79538628429624 -51.15381896495819, -29.795004551321096 -51.15452706813812, -29.794883513732213 -51.154441237449646, -29.79430625552492 -51.154462695121765, -29.793971071811892 -51.15492403507233, -29.793924518429623 -51.15539610385895, -29.792472042023952 -51.15577161312103))',
			'stroke_color': 'F25F5C',
			'stroke_opacity': 0.8,
			'stroke_weight': 1,
			'fill_color': 'F25F5C',
			'fill_opacity': 0.4,
		},
		{
			'name': 'Centro C',
			'geom': 'POLYGON((-29.792034432820458 -51.15358293056488, -29.795153520460268 -51.15256369113922, -29.794985930163108 -51.15159809589386, -29.794920756082853 -51.15005314350128, -29.79408279984098 -51.15006387233734, -29.793151729120222 -51.150729060173035, -29.792704812097245 -51.15100800991058, -29.79155957811571 -51.15134060382843, -29.792034432820458 -51.15358293056488))',
			'color': '000000',
			'stroke_color': 'FFE066',
			'stroke_opacity': 0.8,
			'stroke_weight': 1,
			'fill_color': 'FFE066',
			'fill_opacity': 0.4,
		},
		{
			'name': 'Centro D',
			'geom': 'POLYGON((-29.795395594838418 -51.15364730358124, -29.797239065121897 -51.153250336647034, -29.79696906402153 -51.15226328372955, -29.796838718401958 -51.15110456943512, -29.796391817845727 -51.150439381599426, -29.79592629431048 -51.150246262550354, -29.794957998419612 -51.15006387233734, -29.79502317247561 -51.15157663822174, -29.795395594838418 -51.15364730358124))',
			'stroke_color': '247BA0',
			'stroke_opacity': 0.8,
			'stroke_weight': 1,
			'fill_color': '247BA0',
			'fill_opacity': 0.4,
		},
		{

			'name': 'Centro E',
			'geom': 'POLYGON((-29.795041793626687 -51.15453779697418, -29.795432836998465 -51.15382969379425, -29.795404905379733 -51.15367949008942, -29.79724837549168 -51.15329325199127, -29.79759285856436 -51.15385115146637, -29.798365613575065 -51.15483820438385, -29.7985425084609 -51.15565359592438, -29.79838423410409 -51.156200766563416, -29.797406651645325 -51.15750968456268, -29.797211134007373 -51.15740239620209, -29.79611250398447 -51.15760624408722, -29.795833189343526 -51.15737020969391, -29.79555387392288 -51.156232953071594, -29.79562835811129 -51.15539610385895, -29.79528386827512 -51.15475237369537, -29.795041793626687 -51.15453779697418))',
			'stroke_color': '70C1B3',
			'stroke_opacity': 0.8,
			'stroke_weight': 1,
			'fill_color': '70C1B3',
			'fill_opacity': 0.4,
		}
	]

	for building in buildings:
		b = Building(building)
		db.session.add(b)
		db.session.commit()

@app.cli.command()
def tornado():
	log = open('tornado.log', 'a+')
	ctx = daemon.DaemonContext(stdout=log, stderr=log, working_directory='.')
	ctx.open()

	http_server = HTTPServer(WSGIContainer(app))
	http_server.listen(8080)
	IOLoop.instance().start()
